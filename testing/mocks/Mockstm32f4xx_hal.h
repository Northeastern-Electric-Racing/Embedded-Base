/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKSTM32F4XX_HAL_H
#define _MOCKSTM32F4XX_HAL_H

#include "unity.h"
#include "stm32f4xx_hal.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void Mockstm32f4xx_hal_Init(void);
void Mockstm32f4xx_hal_Destroy(void);
void Mockstm32f4xx_hal_Verify(void);




#define HAL_Init_Expect() TEST_FAIL_MESSAGE("HAL_Init requires _ExpectAndReturn");
#define HAL_Init_ExpectAndReturn(cmock_retval) HAL_Init_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_Init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
#define HAL_DeInit_Expect() TEST_FAIL_MESSAGE("HAL_DeInit requires _ExpectAndReturn");
#define HAL_DeInit_ExpectAndReturn(cmock_retval) HAL_DeInit_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_DeInit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
#define HAL_MspInit_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_MspInit requires _Expect (not AndReturn)");
#define HAL_MspInit_Expect() HAL_MspInit_CMockExpect(__LINE__)
void HAL_MspInit_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define HAL_MspDeInit_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_MspDeInit requires _Expect (not AndReturn)");
#define HAL_MspDeInit_Expect() HAL_MspDeInit_CMockExpect(__LINE__)
void HAL_MspDeInit_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define HAL_InitTick_Expect(TickPriority) TEST_FAIL_MESSAGE("HAL_InitTick requires _ExpectAndReturn");
#define HAL_InitTick_ExpectAndReturn(TickPriority, cmock_retval) HAL_InitTick_CMockExpectAndReturn(__LINE__, TickPriority, cmock_retval)
void HAL_InitTick_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t TickPriority, HAL_StatusTypeDef cmock_to_return);
#define HAL_IncTick_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_IncTick requires _Expect (not AndReturn)");
#define HAL_IncTick_Expect() HAL_IncTick_CMockExpect(__LINE__)
void HAL_IncTick_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define HAL_Delay_ExpectAndReturn(Delay, cmock_retval) TEST_FAIL_MESSAGE("HAL_Delay requires _Expect (not AndReturn)");
#define HAL_Delay_Expect(Delay) HAL_Delay_CMockExpect(__LINE__, Delay)
void HAL_Delay_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t Delay);
#define HAL_GetTick_Expect() TEST_FAIL_MESSAGE("HAL_GetTick requires _ExpectAndReturn");
#define HAL_GetTick_ExpectAndReturn(cmock_retval) HAL_GetTick_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetTick_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetTickPrio_Expect() TEST_FAIL_MESSAGE("HAL_GetTickPrio requires _ExpectAndReturn");
#define HAL_GetTickPrio_ExpectAndReturn(cmock_retval) HAL_GetTickPrio_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetTickPrio_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_SetTickFreq_Expect(Freq) TEST_FAIL_MESSAGE("HAL_SetTickFreq requires _ExpectAndReturn");
#define HAL_SetTickFreq_ExpectAndReturn(Freq, cmock_retval) HAL_SetTickFreq_CMockExpectAndReturn(__LINE__, Freq, cmock_retval)
void HAL_SetTickFreq_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, HAL_TickFreqTypeDef Freq, HAL_StatusTypeDef cmock_to_return);
#define HAL_GetTickFreq_Expect() TEST_FAIL_MESSAGE("HAL_GetTickFreq requires _ExpectAndReturn");
#define HAL_GetTickFreq_ExpectAndReturn(cmock_retval) HAL_GetTickFreq_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetTickFreq_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, HAL_TickFreqTypeDef cmock_to_return);
#define HAL_SuspendTick_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_SuspendTick requires _Expect (not AndReturn)");
#define HAL_SuspendTick_Expect() HAL_SuspendTick_CMockExpect(__LINE__)
void HAL_SuspendTick_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define HAL_ResumeTick_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_ResumeTick requires _Expect (not AndReturn)");
#define HAL_ResumeTick_Expect() HAL_ResumeTick_CMockExpect(__LINE__)
void HAL_ResumeTick_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define HAL_GetHalVersion_Expect() TEST_FAIL_MESSAGE("HAL_GetHalVersion requires _ExpectAndReturn");
#define HAL_GetHalVersion_ExpectAndReturn(cmock_retval) HAL_GetHalVersion_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetHalVersion_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetREVID_Expect() TEST_FAIL_MESSAGE("HAL_GetREVID requires _ExpectAndReturn");
#define HAL_GetREVID_ExpectAndReturn(cmock_retval) HAL_GetREVID_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetREVID_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetDEVID_Expect() TEST_FAIL_MESSAGE("HAL_GetDEVID requires _ExpectAndReturn");
#define HAL_GetDEVID_ExpectAndReturn(cmock_retval) HAL_GetDEVID_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetDEVID_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_DBGMCU_EnableDBGSleepMode_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_EnableDBGSleepMode requires _Expect (not AndReturn)");
#define HAL_DBGMCU_EnableDBGSleepMode_Expect() HAL_DBGMCU_EnableDBGSleepMode_CMockExpect(__LINE__)
void HAL_DBGMCU_EnableDBGSleepMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define HAL_DBGMCU_DisableDBGSleepMode_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_DisableDBGSleepMode requires _Expect (not AndReturn)");
#define HAL_DBGMCU_DisableDBGSleepMode_Expect() HAL_DBGMCU_DisableDBGSleepMode_CMockExpect(__LINE__)
void HAL_DBGMCU_DisableDBGSleepMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define HAL_DBGMCU_EnableDBGStopMode_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_EnableDBGStopMode requires _Expect (not AndReturn)");
#define HAL_DBGMCU_EnableDBGStopMode_Expect() HAL_DBGMCU_EnableDBGStopMode_CMockExpect(__LINE__)
void HAL_DBGMCU_EnableDBGStopMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define HAL_DBGMCU_DisableDBGStopMode_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_DisableDBGStopMode requires _Expect (not AndReturn)");
#define HAL_DBGMCU_DisableDBGStopMode_Expect() HAL_DBGMCU_DisableDBGStopMode_CMockExpect(__LINE__)
void HAL_DBGMCU_DisableDBGStopMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define HAL_DBGMCU_EnableDBGStandbyMode_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_EnableDBGStandbyMode requires _Expect (not AndReturn)");
#define HAL_DBGMCU_EnableDBGStandbyMode_Expect() HAL_DBGMCU_EnableDBGStandbyMode_CMockExpect(__LINE__)
void HAL_DBGMCU_EnableDBGStandbyMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define HAL_DBGMCU_DisableDBGStandbyMode_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DBGMCU_DisableDBGStandbyMode requires _Expect (not AndReturn)");
#define HAL_DBGMCU_DisableDBGStandbyMode_Expect() HAL_DBGMCU_DisableDBGStandbyMode_CMockExpect(__LINE__)
void HAL_DBGMCU_DisableDBGStandbyMode_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define HAL_EnableCompensationCell_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_EnableCompensationCell requires _Expect (not AndReturn)");
#define HAL_EnableCompensationCell_Expect() HAL_EnableCompensationCell_CMockExpect(__LINE__)
void HAL_EnableCompensationCell_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define HAL_DisableCompensationCell_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DisableCompensationCell requires _Expect (not AndReturn)");
#define HAL_DisableCompensationCell_Expect() HAL_DisableCompensationCell_CMockExpect(__LINE__)
void HAL_DisableCompensationCell_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define HAL_GetUIDw0_Expect() TEST_FAIL_MESSAGE("HAL_GetUIDw0 requires _ExpectAndReturn");
#define HAL_GetUIDw0_ExpectAndReturn(cmock_retval) HAL_GetUIDw0_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetUIDw0_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetUIDw1_Expect() TEST_FAIL_MESSAGE("HAL_GetUIDw1 requires _ExpectAndReturn");
#define HAL_GetUIDw1_ExpectAndReturn(cmock_retval) HAL_GetUIDw1_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetUIDw1_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_GetUIDw2_Expect() TEST_FAIL_MESSAGE("HAL_GetUIDw2 requires _ExpectAndReturn");
#define HAL_GetUIDw2_ExpectAndReturn(cmock_retval) HAL_GetUIDw2_CMockExpectAndReturn(__LINE__, cmock_retval)
void HAL_GetUIDw2_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define HAL_EnableMemorySwappingBank_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_EnableMemorySwappingBank requires _Expect (not AndReturn)");
#define HAL_EnableMemorySwappingBank_Expect() HAL_EnableMemorySwappingBank_CMockExpect(__LINE__)
void HAL_EnableMemorySwappingBank_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define HAL_DisableMemorySwappingBank_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("HAL_DisableMemorySwappingBank requires _Expect (not AndReturn)");
#define HAL_DisableMemorySwappingBank_Expect() HAL_DisableMemorySwappingBank_CMockExpect(__LINE__)
void HAL_DisableMemorySwappingBank_CMockExpect(UNITY_LINE_TYPE cmock_line);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
